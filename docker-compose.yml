services:
    api:
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_HTTP_PORTS=3000
            - ASPNETCORE_HTTPS_PORTS=3001
            - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASSWORD}
            - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/ticketing-api.pfx
            - ConnectionStrings__DefaultConnection=${CONNECTION_STRING}
            - JWT__SigningKey=${SIGNING_KEY}
        container_name: api
        image: api
        build: 
            context: /api
            dockerfile: api/Dockerfile
        ports:
            - "3000:3000"
            - "3001:3001"
        volumes:
            - ~/.aspnet/https:/https:ro
        depends_on:
            database.server:
                condition: service_healthy
    database.server:
        image: "mcr.microsoft.com/mssql/server"
        container_name: database.server
        ports:
            - "1433:1433"
        environment:
            - ACCEPT_EULA=y
            - SA_PASSWORD=${SA_PASSWORD}
        volumes:
            - ./sqlserver/data:/var/opt/mssql/data
            - ./sqlserver/log:/var/opt/mssql/log
        
        healthcheck:
            test: /opt/mssql-tools18/bin/sqlcmd -S localhost -U SA -P ${SA_PASSWORD} -Q "SELECT 1" -C -b -o /dev/null
            interval: 10s
            timeout: 3s
            retries: 10
            start_period: 60s
            start_interval: 30s
    frontend:
        build:
            context: /frontend/ticketing-frontend
            dockerfile: Dockerfile
        image: frontend
        container_name: "frontend"
        ports:
            - "5000:5000"
        depends_on:
            - api